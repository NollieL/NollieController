export function Name() { return "Nollie 4"; } 
export function VendorId() { return 0x3061; }
export function ProductId() { return 0x4711; }
export function Publisher() { return "Nollie"; } 
export function Size() { return [1, 1]; }
export function DefaultPosition(){return [0, 0];}
export function DefaultScale(){return 1.0;}
export function Type() { return "Hid"; }

export function ControllableParameters() 
{
	return [
		{"property":"shutdownColor", "label":"Shutdown Color", "min":"0", "max":"360", "type":"color", "default":"000000"},
		{"property":"LightingMode", "label":"Lighting Mode", "type":"combobox", "values":["Canvas", "Forced"], "default":"Canvas"},
		{"property":"forcedColor", "label":"Forced Color", "min":"0", "max":"360", "type":"color", "default":"009bde"},
		{"property":"ElectricType", "group":"lighting", "label":"Electric current", "type":"combobox", "values":["5A", "10A", "12A", "15A"], "default":"12A"},
		{"property":"StripLightType", "group":"lighting", "label":"StripLightType", "type":"combobox", "values":["WS2812", "WS2813", "WS2815"], "default":"WS2812"},
		{"property":"Electric", "group":"lighting", "label":"Acquired current", "type":"boolean", "default": "false"}
	];
}
const MaxLedsInPacket = 20;
const DeviceMaxLedLimit = 640;
let frequency = 0;
let ChannelArray = 
[
	["Channel 01", 636],
	["Channel 02", 636],
	["Channel 03", 636],
	["Channel 04", 636]
];
let Channelnum = [];

export function onElectricTypeChanged() 
{
	if(ElectricType === "5A") //153
	{
		var packet = [0x00,0x89,0x99];
		device.write(packet, 65);
	}
	else if(ElectricType === "10A")//177
	{
		var packet = [0x00,0x89,0xb1];
		device.write(packet, 65);
	}
	else if(ElectricType === "12A")//188
	{
		var packet = [0x00,0x89,0xbc];
		device.write(packet, 65);
	}		
	else if(ElectricType === "15A")//205
	{
		var packet = [0x00,0x89,0xCD];
		device.write(packet, 65);
	}	
}


function SetupChannels()
{
	device.SetLedLimit(DeviceMaxLedLimit);

	for(let i = 0; i < ChannelArray.length; i++)
	{
		device.addChannel(ChannelArray[i][0], ChannelArray[i][1]);
	}
}

function ReadChannels()
{
	var packet = new Array(65).fill(0);
	packet[1] = 0x87;
	device.flush();
	device.write(packet, 65);
	var config = device.read(packet, 65);
	device.log(config);
	for (var i = 0; i < 4; i++) 
	{
		Channelnum[i] = config[3+(i*2)] * 256 + config[4+(i*2)]; 
	}
	device.log(Channelnum);
}


export function Initialize() 
{

	SetupChannels();
	ReadChannels();
}

export function Render() 
{ 
  
	var DevLedCount = 0;
  var Data = [];
  var UpdateChannel = 0;
  for(let i = 0; i < ChannelArray.length; i++)
	{
		let {RGBData,ChannelLedCount} = GetChannelRGB(i);
		
		if(ChannelLedCount == 0 )
		{
			ChannelLedCount = 1;
			RGBData = [0,0,0];
		}
		if(Channelnum[i] != ChannelLedCount)
		{
			var UpdateChannel = 1;
			Channelnum[i] = ChannelLedCount;	
		}	
		DevLedCount += ChannelLedCount;
    Data.push(...RGBData);
	}
	if(UpdateChannel)
	{
		var packet = new Array(65).fill(0);
	  packet[1] = 0x86;
	  for (var i = 0; i < Channelnum.length; i++) 
	  {
	  	let { high, low } = splitHex(Channelnum[i]);
	  	packet[3+(i*2)] = high;
	  	packet[4+(i*2)] = low;
	  }
	  device.write(packet, 65);
	  device.log(Channelnum);
	  device.log("Update channel LED count");
	  device.pause(200);
	}
	var NumPackets = Math.ceil(DevLedCount/ MaxLedsInPacket);
	for(var CurrPacket = 0; CurrPacket < NumPackets; CurrPacket++)
	{
			var packet = [0x00,CurrPacket];
			packet.push(...Data.splice(0, 60));
			device.write(packet, 65);
	}
	
	if(Electric )//read Electric
	{
		frequency += 1;
		if(frequency > 30)
		{
			frequency = 0;
			var packet = new Array(65).fill(0);
			packet[1] = 0x8A;
			device.flush();
			device.write(packet, 65);
			var config = device.read(packet, 65);
			let Ampere = ((config[2]-127) * 0.195).toFixed(2);
			if (Ampere  < 0)
			{
				Ampere = 0
			}	
			if(StripLightType == "WS2812")
			{
				device.log("Electric current:"+ Ampere + "A" + "   Power:" + (Ampere * 5).toFixed(2) + "W");
			}
			else
			{
				device.log("Electric current:"+ Ampere + "A" + "   Power:" + (Ampere * 12).toFixed(2) + "W");
			}	
		}	
		
	} 
}

export function Shutdown() 
{

}


function GetChannelRGB(Channel, shutdown = false)
{
	let ChannelLedCount = device.channel(ChannelArray[Channel][0]).ledCount > ChannelArray[Channel][1] ? ChannelArray[Channel][1] : device.channel(ChannelArray[Channel][0]).ledCount;

	let componentChannel = device.channel(ChannelArray[Channel][0]);

	let RGBData = [];

	if(shutdown)
	{
		RGBData = device.createColorArray(shutdownColor, ChannelLedCount, "Inline", "GRB");
	}
	else if(LightingMode === "Forced")
	{
		RGBData = device.createColorArray(forcedColor, ChannelLedCount, "Inline", "GRB");
	}
	else if(componentChannel.shouldPulseColors())
	{
		ChannelLedCount = 60;

		let pulseColor = device.getChannelPulseColor(ChannelArray[Channel][0], ChannelLedCount);
		RGBData = device.createColorArray(pulseColor, ChannelLedCount, "Inline", "GRB");
	}
	else
	{
		RGBData = device.channel(ChannelArray[Channel][0]).getColors("Inline", "GRB");
	}
	return {RGBData,ChannelLedCount};
}

function splitHex(num) {
  const high = (num >>> 8) & 0xFF; // 取高 8 位，并且将低 24 位清零
  const low = num & 0xFF; // 取低 8 位
  // const chk = high ^ low ^ 0x55; // 计算校验值
  return { high, low }; // 返回高位、低位和校验值的整数
}
export function Validate(endpoint)
{
	return endpoint.interface === 3 ;
}

export function Image()
{
	return ""
}